1.What is Python? What are the benefits of using Python
General purpose programming lanugage
Easy to use
Can be easily learned
It has huge community support
Offers multiple library for machine learning, big data processing, web development framework like flask, django

2. What is a dynamically typed language?
Static - Data Types are checked before execution.
Dynamic - Data Types are checked during execution.
Python is an interpreted language, executes each statement line by line and thus type-checking is done on the fly, during execution.
Hence, Python is a Dynamically Typed Language.

3. 3. What is an Interpreted language?
An Interpreted language executes its statements line by line.
Languages such as Python, Javascript, R, PHP, and Ruby are prime examples of Interpreted languages. 
Programs written in an interpreted language runs directly from the source code, with no intermediary compilation step.

4. What is PEP 8 and why is it important?
PEP stands for Python Enhancement Proposal. 
A PEP is an official design document providing information to the Python community, or describing a new feature for Python or its processes.

5.  What is Scope in Python?
A local scope refers to the local objects available in the current function.
A global scope refers to the objects available throughout the code execution since their inception.
A module-level scope refers to the global objects of the current module accessible in the program.
An outermost scope refers to all the built-in names callable in the program. The objects in this scope are searched last to find the name referenced.
Note: Local scope objects can be synced with global scope objects using keywords such as global

6. What are lists and tuples? What is the key difference between the two?
Lists and Tuples are both sequence data types that can store a collection of objects in Python.
The objects stored in both sequences can have different data types.
Lists are represented with square brackets ['sara', 6, 0.19], while tuples are represented with parantheses ('ansh', 5, 0.97).
But what is the real difference between the two? The key difference between the two is that while lists are mutable, tuples on the other hand are immutable objects.
This means that lists can be modified, appended or sliced on the go but tuples remain constant and cannot be modified in any manner.


7. What are the common built-in data types in Python?
None Type: Null type in Python
Numeric Types: integers, floating-point numbers, and complex numbers
Sequence Types:list	Mutable sequence used to store collection of items.
tuple	Immutable sequence used to store collection of items.
range	Represents an immutable sequence of numbers generated during execution.
str	Immutable sequence of Unicode code points to store textual data.

Mapping Types:dict	Stores comma-separated list of key: value pairs
Set Types:set	Mutable unordered collection of distinct hashable objects.
frozenset	Immutable collection of distinct hashable objects.

Modules:
Module is an additional built-in type supported by the Python Interpreter.
It supports one special operation, 
i.e., attribute access: mymod.myobj, where mymod is a module and myobj references a name

Callable Types:
Callable types are the types to which function call can be applied. 
They can be user-defined functions, instance methods, generator functions, and some other built-in functions, methods and classes.

8. What is pass in Python?
the pass keyword represents a null operation in Python.
It is generally used for the purpose of filling up empty blocks

9. What are modules and packages in Python?
Modules typically have a .py extension.
Examples of modules include math.py, random.py, and datetime.py.

Packages:
A package is a collection of Python modules organized in directories.
Packages contain a special file named __init__.py, which indicates that the directory should be treated as a Python package.


